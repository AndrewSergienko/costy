# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on: [push, pull_request]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DB_USER: postgres
      DB_PASSWORD: 123456
      TEST_DB_NAME: test_database
      SECRET_KEY: ${{ secrets.CRYPT_SECRET_KEY }}
      ALGORITHM: ${{ secrets.CRYPT_ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.CRYPT_ACCESS_TOKEN_EXPIRE_MINUTES }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456
          POSTGRES_DB: test_database
        ports: [ '5432:5432' ]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Set env variables
      run: |
        echo "DB_USER=$DB_USER" >> $GITHUB_ENV
        echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV
        echo "TEST_DB_NAME=$TEST_DB_NAME" >> $GITHUB_ENV
        echo "DB_HOST=localhost:${{ job.services.postgres.ports[5432] }}" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        pytest
    - name: Build sphinx doc
      run: |
        sphinx-build -b html docs/source/ docs/build/html
